  +type_from_handle(scope: Cppyy::TCppScope_t): TClassRef&
  +type_get_method(klass: Cppyy::TCppType_t, idx: Cppyy::TCppIndex_t): TFunction*
  +declaring_scope(method: Cppyy::TCppMethod_t): Cppyy::TCppScope_t
  +Cppyy::GetNumScopes(scope: TCppScope_t): Cppyy::TCppIndex_t
  +Cppyy::GetScopeName(parent: TCppScope_t, iscope: TCppIndex_t): std::string
  +Cppyy::ResolveName(cppitem_name: conSTstd::string&): std::string
  +Cppyy::GetScope(sname: conSTstd::string&): Cppyy::TCppScope_t
  +Cppyy::GetTemplate(template_name: conSTstd::string&): Cppyy::TCppType_t
  +Cppyy::GetActualClass(klass: TCppType_t, obj: TCppObject_t): Cppyy::TCppType_t
  +Cppyy::SizeOf(klass: TCppType_t): size_t
  +Cppyy::IsBuiltin(type_name: conSTstd::string&): Bool_t
  +Cppyy::IsComplete(type_name: conSTstd::string&): Bool_t
  +Cppyy::Allocate(type: TCppType_t): Cppyy::TCppObject_t
  +Cppyy::Deallocate(type: TCppType_t, instance: TCppObject_t): void
  +Cppyy::Construct(type: TCppType_t): Cppyy::TCppObject_t
  +Cppyy::Destruct(type: TCppType_t, instance: TCppObject_t): void
  +GetGlobalNamespaceInfo(): ClassInfo_t*
  +GetCallFunc(method: Cppyy::TCppMethod_t): CallFunc_t*
  +copy_args(args_: void*, vargs: void**): void
  +FastCall(method: Cppyy::TCppMethod_t, args_: void*, self: void*, result: void*): Bool_t
  
  +T>: template<typename
  
  +CallT(method: Cppyy::TCppMethod_t, self: Cppyy::TCppObject_t, args: void*): T
  
  +CPPYY_IMP_CALL(typecode rtype) \: #define
  +Cppyy::Call##typecode(method: TCppMethod_t, self: TCppObject_t, args: void*)\: rtype
  
  +Cppyy::CallV(method: TCppMethod_t, self: TCppObject_t, args: void*): void
  +Cppyy::CallR(method: TCppMethod_t, self: TCppObject_t, args: void*): void*
  +Cppyy::CallS(method: TCppMethod_t, self: TCppObject_t, args: void*): Char_t*
  +Cppyy::CallConstructor(method: TCppMethod_t, klass: TCppType_t, args: void*): Cppyy::TCppObject_t
  +Cppyy::CallDestructor(type: TCppType_t, self: TCppObject_t): void
  +Cppyy::CallO(method: TCppMethod_t, self: TCppObject_t, args: void*, result_type: TCppType_t): Cppyy::TCppObject_t
  +Cppyy::GetMethPtrGetter(scope: TCppScope_t, imeth: TCppIndex_t): Cppyy::TCppMethPtrGetter_t
  +Cppyy::AllocateFunctionArgs(nargs: size_t): void*
  +Cppyy::DeallocateFunctionArgs(args: void*): void
  +Cppyy::GetFunctionArgSizeof(): size_t
  +Cppyy::GetFunctionArgTypeoffset()\: size_t
  +Cppyy::IsNamespace(scope: TCppScope_t): Bool_t
  +Cppyy::IsAbstract(klass: TCppType_t): Bool_t
  +Cppyy::IsEnum(type_name: conSTstd::string&): Bool_t
  +Cppyy::GetFinalName(klass: TCppType_t): std::string
  +Cppyy::GetScopedFinalName(klass: TCppType_t): std::string
  +Cppyy::HasComplexHierarchy(handle: TCppType_t): Bool_t
  +Cppyy::GetNumBases(klass: TCppType_t): Cppyy::TCppIndex_t
  +Cppyy::GetBaseName(klass: TCppType_t, ibase: TCppIndex_t): std::string
  +Cppyy::IsSubtype(derived: TCppType_t, base: TCppType_t): Bool_t
  +Cppyy::AddSmartPtrType(type_name: conSTstd::string&): void
  +Cppyy::IsSmartPtr(type_name: conSTstd::string&): Bool_t
  +Cppyy::GetBaseOffset(derived: TCppType_t, base: TCppType_t, address: TCppObject_t, direction: int, rerror: bool): ptrdiff_t
  +Cppyy::GetNumMethods(scope: TCppScope_t): Cppyy::TCppIndex_t
  +Cppyy::GetMethodIndexAt(scope: TCppScope_t, imeth: TCppIndex_t): Cppyy::TCppIndex_t
  +Cppyy::GetMethodsFromName(scope: TCppScope_t, name: conSTstd::string&): std::vector<Cppyy::TCppMethod_t>
  +Cppyy::GetMethod(scope: TCppScope_t, imeth: TCppIndex_t): Cppyy::TCppMethod_t
  +Cppyy::GetMethodName(method: TCppMethod_t): std::string
  +Cppyy::GetMethodResultType(method: TCppMethod_t): std::string
  +Cppyy::GetMethodNumArgs(method: TCppMethod_t): Cppyy::TCppIndex_t
  +Cppyy::GetMethodReqArgs(method: TCppMethod_t): Cppyy::TCppIndex_t
  +Cppyy::GetMethodArgName(method: TCppMethod_t, iarg: int): std::string
  +Cppyy::GetMethodArgType(method: TCppMethod_t, iarg: int): std::string
  +Cppyy::GetMethodArgDefault(method: TCppMethod_t, iarg: int): std::string
  +Cppyy::GetMethodSignature(scope: TCppScope_t, imeth: TCppIndex_t): std::string
  +Cppyy::IsConstMethod(method: TCppMethod_t): Bool_t
  +Cppyy::IsMethodTemplate(method: TCppMethod_t): Bool_t
  +Cppyy::GetMethodNumTemplateArgs(scope: TCppScope_t, imeth: TCppIndex_t): Cppyy::TCppIndex_t
  +Cppyy::GetMethodTemplateArgName(scope: TCppScope_t, imeth: TCppIndex_t, iarg: TCppIndex_t): std::string
  +Cppyy::GetGlobalOperator(scope: TCppScope_t, lc: TCppType_t, rc: TCppType_t, op: conSTstd::string&): Cppyy::TCppIndex_t
  +Cppyy::IsConstructor(method: TCppMethod_t): Bool_t
  +Cppyy::IsPublicMethod(method: TCppMethod_t): Bool_t
  +Cppyy::IsStaticMethod(method: TCppMethod_t): Bool_t
  +Cppyy::GetNumDatamembers(scope: TCppScope_t): Cppyy::TCppIndex_t
  +Cppyy::GetDatamemberName(scope: TCppScope_t, idata: TCppIndex_t): std::string
  +Cppyy::GetDatamemberType(scope: TCppScope_t, idata: TCppIndex_t): std::string
  +Cppyy::GetDatamemberOffset(scope: TCppScope_t, idata: TCppIndex_t): ptrdiff_t
  +Cppyy::GetDatamemberIndex(scope: TCppScope_t, name: conSTstd::string&): Cppyy::TCppIndex_t
  +Cppyy::IsPublicData(scope: TCppScope_t, idata: TCppIndex_t): Bool_t
  +Cppyy::IsStaticData(scope: TCppScope_t, idata: TCppIndex_t): Bool_t
  +Cppyy::IsConstData(scope: TCppScope_t, idata: TCppIndex_t): Bool_t
  +Cppyy::IsEnumData(scope: TCppScope_t, idata: TCppIndex_t): Bool_t
  +Cppyy::GetDimensionSize(scope: TCppScope_t, idata: TCppIndex_t, dimension: int): Int_t
