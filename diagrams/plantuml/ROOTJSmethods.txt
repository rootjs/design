Methods:
static inline
TClassRef& type_from_handle( Cppyy::TCppScope_t scope )
static inline
TFunction* type_get_method( Cppyy::TCppType_t klass, Cppyy::TCppIndex_t idx )
static inline
Cppyy::TCppScope_t declaring_scope( Cppyy::TCppMethod_t method )
Cppyy::TCppIndex_t Cppyy::GetNumScopes( TCppScope_t scope )
std::string Cppyy::GetScopeName( TCppScope_t parent, TCppIndex_t iscope ) 
std::string Cppyy::ResolveName( const std::string& cppitem_name )
Cppyy::TCppScope_t Cppyy::GetScope( const std::string& sname )
Cppyy::TCppType_t Cppyy::GetTemplate( const std::string& /* template_name */ )
Cppyy::TCppType_t Cppyy::GetActualClass( TCppType_t klass, TCppObject_t obj )
size_t Cppyy::SizeOf( TCppType_t klass )
Bool_t Cppyy::IsBuiltin( const std::string& type_name )
Bool_t Cppyy::IsComplete( const std::string& type_name )
Cppyy::TCppObject_t Cppyy::Allocate( TCppType_t type )
void Cppyy::Deallocate( TCppType_t /* type */, TCppObject_t instance
Cppyy::TCppObject_t Cppyy::Construct( TCppType_t type )
void Cppyy::Destruct( TCppType_t type, TCppObject_t instance )
static inline ClassInfo_t* GetGlobalNamespaceInfo()
static CallFunc_t* GetCallFunc( Cppyy::TCppMethod_t method )
static inline void copy_args( void* args_, void** vargs ) 
Bool_t FastCall(
      Cppyy::TCppMethod_t method, void* args_, void* self, void* result )
template< typename T >
static inline T CallT( Cppyy::TCppMethod_t method, Cppyy::TCppObject_t self, void* args )

#define CPPYY_IMP_CALL( typecode, rtype )                                     \
rtype Cppyy::Call##typecode( TCppMethod_t method, TCppObject_t self, void* args )\

void Cppyy::CallV( TCppMethod_t method, TCppObject_t self, void* args )
void* Cppyy::CallR( TCppMethod_t method, TCppObject_t self, void* args )
Char_t* Cppyy::CallS( TCppMethod_t method, TCppObject_t self, void* args )
Cppyy::TCppObject_t Cppyy::CallConstructor(
      TCppMethod_t method, TCppType_t /* klass */, void* args ) 
void Cppyy::CallDestructor( TCppType_t type, TCppObject_t self )
Cppyy::TCppObject_t Cppyy::CallO( TCppMethod_t method,
      TCppObject_t self, void* args, TCppType_t result_type )
Cppyy::TCppMethPtrGetter_t Cppyy::GetMethPtrGetter(
      TCppScope_t /* scope */, TCppIndex_t /* imeth */ )
void* Cppyy::AllocateFunctionArgs( size_t nargs )
void Cppyy::DeallocateFunctionArgs( void* args )
size_t Cppyy::GetFunctionArgSizeof()
size_t Cppyy::GetFunctionArgTypeoffset()\

Bool_t Cppyy::IsNamespace( TCppScope_t scope )
Bool_t Cppyy::IsAbstract( TCppType_t klass )
Bool_t Cppyy::IsEnum( const std::string& type_name ) 

// class reflection information ----------------------------------------------
std::string Cppyy::GetFinalName( TCppType_t klass )
std::string Cppyy::GetScopedFinalName( TCppType_t klass )
Bool_t Cppyy::HasComplexHierarchy( TCppType_t /* handle */ )
Cppyy::TCppIndex_t Cppyy::GetNumBases( TCppType_t klass )
std::string Cppyy::GetBaseName( TCppType_t klass, TCppIndex_t ibase )
Bool_t Cppyy::IsSubtype( TCppType_t derived, TCppType_t base )
void Cppyy::AddSmartPtrType( const std::string& type_name )
Bool_t Cppyy::IsSmartPtr( const std::string& type_name )

// type offsets --------------------------------------------------------------
ptrdiff_t Cppyy::GetBaseOffset( TCppType_t derived, TCppType_t base,
      TCppObject_t address, int direction, bool rerror )

// method/function reflection information ------------------------------------
Cppyy::TCppIndex_t Cppyy::GetNumMethods( TCppScope_t scope )
Cppyy::TCppIndex_t Cppyy::GetMethodIndexAt( TCppScope_t /* scope */, TCppIndex_t /* imeth */ )
std::vector< Cppyy::TCppMethod_t > Cppyy::GetMethodsFromName(
      TCppScope_t scope, const std::string& name )
Cppyy::TCppMethod_t Cppyy::GetMethod( TCppScope_t scope, TCppIndex_t imeth )
std::string Cppyy::GetMethodName( TCppMethod_t method )
std::string Cppyy::GetMethodResultType( TCppMethod_t method )
Cppyy::TCppIndex_t Cppyy::GetMethodNumArgs( TCppMethod_t method )
Cppyy::TCppIndex_t Cppyy::GetMethodReqArgs( TCppMethod_t method )
std::string Cppyy::GetMethodArgName( TCppMethod_t method, int iarg )
std::string Cppyy::GetMethodArgType( TCppMethod_t method, int iarg )
std::string Cppyy::GetMethodArgDefault( TCppMethod_t method, int iarg )
std::string Cppyy::GetMethodSignature( TCppScope_t /* scope */, TCppIndex_t /* imeth */ )
Bool_t Cppyy::IsConstMethod( TCppMethod_t method )
Bool_t Cppyy::IsMethodTemplate( TCppMethod_t method )
Cppyy::TCppIndex_t Cppyy::GetMethodNumTemplateArgs(
      TCppScope_t /* scope */, TCppIndex_t /* imeth */ )
std::string Cppyy::GetMethodTemplateArgName(
      TCppScope_t /* scope */, TCppIndex_t /* imeth */, TCppIndex_t /* iarg */ )
Cppyy::TCppIndex_t Cppyy::GetGlobalOperator(
      TCppScope_t /* scope */, TCppType_t /* lc */, TCppType_t /* rc */, const std::string& /* op */ )
Bool_t Cppyy::IsConstructor( TCppMethod_t method )
Bool_t Cppyy::IsPublicMethod( TCppMethod_t method )
Bool_t Cppyy::IsStaticMethod( TCppMethod_t method )
Cppyy::TCppIndex_t Cppyy::GetNumDatamembers( TCppScope_t scope )
std::string Cppyy::GetDatamemberName( TCppScope_t scope, TCppIndex_t idata )
std::string Cppyy::GetDatamemberType( TCppScope_t scope, TCppIndex_t idata )
ptrdiff_t Cppyy::GetDatamemberOffset( TCppScope_t scope, TCppIndex_t idata )
Cppyy::TCppIndex_t Cppyy::GetDatamemberIndex( TCppScope_t scope, const std::string& name )

// data member properties ----------------------------------------------------
Bool_t Cppyy::IsPublicData( TCppScope_t scope, TCppIndex_t idata )
Bool_t Cppyy::IsStaticData( TCppScope_t scope, TCppIndex_t idata  )
Bool_t Cppyy::IsConstData( TCppScope_t scope, TCppIndex_t idata )
Bool_t Cppyy::IsEnumData( TCppScope_t scope, TCppIndex_t idata )
Int_t Cppyy::GetDimensionSize( TCppScope_t scope, TCppIndex_t idata, int dimension )
