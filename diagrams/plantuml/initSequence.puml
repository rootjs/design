@startuml

!include ./config/diagramsConfig.puml
!include ./config/sequenceConfig.puml

title rootJS initialization sequence

actor "Client Application" as Client
participant "NodeHandler" as NodeHandler
participant "<u>gApplication:NodeApplication</u>" as NodeApplicationInstance
participant "<u>gHandler:NodeHandler</u>" as NodeHandlerInstance
participant "<u>:Node</u>" as V8

activate Client
Client -> V8: require(rootJS.node)

activate V8
V8 ->> NodeHandler : <u>Initialize(exports, module)</u>
deactivate V8

activate NodeHandler

/' set exit hook '/
NodeHandler -> V8 : AtExit(Exit)
activate V8
V8 --> NodeHandler
deactivate V8

/' NodeApplication instance creation '/
alt not initialized
  create NodeApplicationInstance
  NodeHandler --> NodeApplicationInstance : <<create>>
end

/' init ROOT environment '/
NodeHandler -> NodeApplicationInstance : initROOTGlobals()
activate NodeApplicationInstance
NodeApplicationInstance --> NodeHandler
deactivate NodeApplicationInstance

NodeHandler -> NodeApplicationInstance : initROOTMessageCallback()
activate NodeApplicationInstance
NodeApplicationInstance --> NodeHandler
deactivate NodeApplicationInstance

/' NodeHandler instance creation '/
alt not initialized
  create NodeHandlerInstance
  NodeHandler --> NodeHandlerInstance : <<create>>
end

/' Exposure of ROOT'/
NodeHandler -> NodeHandlerInstance : exposeROOT()
activate NodeHandlerInstance
NodeHandlerInstance --> NodeHandler
deactivate NodeHandlerInstance

NodeHandler --> Client: exports
deactivate NodeHandler

deactivate Client
@enduml
